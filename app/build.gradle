apply plugin: 'com.android.application'
apply plugin: 'jacoco'

jacoco {
    toolVersion = "$jacocoVersion"
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
}

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {

    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
    def debugTree = fileTree(dir: "$project.buildDir/intermediates/classes/debug", excludes: fileFilter)
    def mainSrc = "$project.projectDir/src/main/java"

    sourceDirectories = files([mainSrc])
    classDirectories = files([debugTree])
    executionData = fileTree(dir: project.buildDir, includes: [
            'jacoco/testDebugUnitTest.exec', 'outputs/code-coverage/connected/*coverage.ec'
    ])
}
android {
    compileSdkVersion 25
    defaultConfig {
        applicationId "com.hackernews"
        minSdkVersion 11
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "BASE_URL", "\"https://hacker-news.firebaseio.com/\""
        buildConfigField "String", "DOMAIN_TOP_NEWS", "\"v0/topstories.json\""
        buildConfigField "String", "DOMAIN_NEWS_DETAIL", "\"v0/item/{newsId}.json\""
        buildConfigField "String", "PARAM_NEWS_ID", "\"newsId\""
    }
    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    testOptions {
        execution 'ANDROID_TEST_ORCHESTRATOR'
        animationsDisabled true
        unitTests.returnDefaultValues = true
        unitTests {
            includeAndroidResources = true
        }
    }

    lintOptions {
        disable 'InvalidPackage'
    }

    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'META-INF/rxjava.properties'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "com.android.support:appcompat-v7:${rootProject.ext.supportLibVersion}"
    implementation "com.android.support:recyclerview-v7:${rootProject.ext.supportLibVersion}"
    implementation "com.android.support:design:${rootProject.ext.supportLibVersion}"

    // Rx
    implementation "io.reactivex.rxjava2:rxjava:${rootProject.ext.rxjava}"
    implementation "io.reactivex.rxjava2:rxandroid:${rootProject.ext.rxandroid}"

    // Network
    implementation "com.squareup.okhttp3:okhttp:${rootProject.ext.okhttpVersion}"
    implementation "com.squareup.okhttp3:logging-interceptor:${rootProject.ext.okhttpVersion}"

    //JSON
    implementation 'com.squareup.moshi:moshi:1.1.0'

    // Dependency Injection
    annotationProcessor "com.google.dagger:dagger-compiler:${rootProject.ext.daggerVersion}"
    implementation "com.google.dagger:dagger:${rootProject.ext.daggerVersion}"
    compileOnly 'javax.annotation:jsr250-api:1.0'

    // Retrofit 2
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'
    implementation 'com.squareup.retrofit2:converter-moshi:2.3.0'

    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2-alpha1'
    androidTestImplementation('com.android.support.test.espresso:espresso-contrib:2.0') {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.android.support', module: 'appcompat'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude module: 'recyclerview-v7'
    }
    androidTestUtil 'com.android.support.test:orchestrator:1.0.2-alpha1'

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.robolectric:robolectric:3.7.1'
    testImplementation 'org.mockito:mockito-core:2.9.0'
}

configurations.all {
    resolutionStrategy.force "com.android.support:support-annotations:${rootProject.ext.supportLibVersion}"
}